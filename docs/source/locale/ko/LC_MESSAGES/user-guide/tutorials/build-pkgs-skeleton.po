# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Anaconda, Inc.
# This file is distributed under the same license as the Conda package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Conda  \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-11 11:28+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:3
msgid "Building conda packages with conda skeleton"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:11
msgid ""
"This tutorial describes how to quickly build a conda package for a Python"
" module that is already available on PyPI."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:14
msgid ""
"In the first procedure, building a simple package, you build a package "
"that can be installed in any conda environment of the same Python version"
" as your root environment. The remaining optional procedures describe how"
" to build packages for other Python versions and other architectures, as "
"well as how to upload packages to your Anaconda.org account."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:23
msgid "Who is this for?"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:25
msgid ""
"This tutorial is for Windows, macOS and Linux users who wish to build a "
"conda package from a PyPI package. No prior knowledge of conda build or "
"conda recipes is required."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:33
msgid "Before you start"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:35
msgid "Before you start, check the :doc:`prerequisites <index>`."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:41
msgid "Building a simple package with conda skeleton pypi"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:43
msgid ""
"The ``conda skeleton`` command picks up the PyPI package metadata and "
"prepares the conda build recipe. The final step is to build the package "
"itself and install it into your conda environment."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:47
msgid ""
"It is easy to build a skeleton recipe for any Python package that is "
"hosted on PyPI, the official third-party software repository for the "
"Python programming language."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:51
msgid ""
"In this section you are going to use conda skeleton to generate a conda "
"recipe, which informs conda build about where the source files are "
"located and how to build and install the package."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:55
msgid ""
"You'll be working with a package named Pyinstrument_ that is hosted on "
"PyPI. Pyinstrument is a Python statistical profiler that records the "
"whole call stack once each millisecond, so programmers can see which "
"parts of their code are slowest and how to make them faster."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:63
msgid "First, in your user home directory, run the ``conda skeleton`` command:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:70
msgid ""
"The two arguments to ``conda skeleton`` are the hosting location, in this"
" case ``pypi``, and the name of the package."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:73
msgid ""
"This creates a directory named ``Pyinstrument`` and creates the skeleton "
"file, ``meta.yaml`` in that directory. Download the other two skeleton "
"files: :download:`build.sh <build.sh>` , :download:`bld.bat <bld.bat>`. "
"Save these files in the same ``pyinstrument`` directory where the "
"``meta.yaml`` file is present. Use the ``ls`` command on macOS or Linux "
"or the ``dir`` command on Windows to verify that these files have been "
"created. The three files have been populated with information from the "
"PyPI metadata and in most cases will not need to be edited."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:84
msgid ""
"These three files are collectively referred to as the \"conda build "
"recipe\":"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:87
msgid ""
"``meta.yaml``---Contains all the metadata in the recipe. Only the package"
" name and package version sections are required---everything else is "
"optional."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:91
msgid "``bld.bat``---Windows commands to build the package."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:93
msgid "``build.sh``---macOS and Linux commands to build the package."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:95
msgid ""
"Now that you have the conda build recipe ready, you can use conda build "
"to create the package:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:102
msgid ""
"When conda build is finished, it displays the exact path and filename of "
"the conda package. See :ref:`troubleshooting` if the ``conda-build`` "
"command fails."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:106
#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:169
msgid "Windows example file path:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:112
#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:176
msgid "macOS example file path:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:119
#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:183
msgid "Linux example file path:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:126
msgid ""
"NOTE: Your path and filename will vary depending on your installation and"
" operating system. Save the path and filename information for the next "
"step."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:130
msgid ""
"Now you can install your newly-built package in your conda environment by"
" using the use-local flag:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:137
msgid "Now verify that Pyinstrument installed successfully:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:143
msgid ""
"At this point you now have a conda package for pyinstrument that can be "
"installed in any conda environment of the same Python version as your "
"root environment. The remaining optional sections show you how to make "
"packages for other Python versions, other architectures and how to upload"
" them to your Anaconda.org account."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:153
msgid "Optional---Building for a different Python version"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:154
msgid ""
"By default, conda build creates packages for the version of Python "
"installed in the root environment. To build packages for other versions "
"of Python, you use the ``--python`` flag, followed by a version. For "
"example, to explicitly build a version of the Pyinstrument package for "
"Python 3.3, use:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:164
msgid ""
"Notice that the file printed at the end of the ``conda-build`` output has"
" changed to reflect the requested version of Python. ``conda install`` "
"will look in the package directory for the file that matches your current"
" Python version."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:190
msgid ""
"NOTE: Your path and filename will vary depending on your installation and"
" operating system. Save the path and filename information for the next "
"task."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:197
msgid "Optional---Converting conda package for other platforms"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:199
msgid ""
"Now that you have built a package for your current platform with conda "
"build, you can convert it for use on other platforms with the ``conda "
"convert`` command and a platform specifier from this list:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:204
msgid "osx-64."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:205
msgid "linux-32."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:206
msgid "linux-64."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:207
msgid "win-32."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:208
msgid "win-64."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:209
msgid "all."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:211
msgid ""
"In the output directory, 1 folder will be created for each of the 1 or "
"more platforms you chose, and each folder will contain a .tar.bz2 package"
" file for that platform."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:215
#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:267
msgid "Windows:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:222
#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:274
msgid "macOS and Linux:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:230
msgid ""
"NOTE: Change your path and filename to the exact path and filename you "
"saved in :ref:`python-versions`."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:233
msgid ""
"To use these packages, you need to transfer them to other computers and "
"place them in the correct ``conda-bld/$ARCH`` directory for the platform,"
" where ``$ARCH`` can be ``osx-64``, ``linux-32``, ``linux-64``, "
"``win-32`` or ``win-64``."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:238
msgid ""
"A simpler way is to upload all of the bz2 files to Anaconda.org as "
"described in the next task."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:245
msgid "Optional---Uploading packages to Anaconda.org"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:247
msgid ""
"Anaconda.org, formerly known as binstar.org, is a repository for public "
"or private packages. Uploading to Anaconda.org allows you to easily "
"install your package in any environment with just the conda install "
"command, rather than manually copying or moving the tarball file from one"
" location to another. You can choose to make your files public or "
"private. For more information about Anaconda.org, see the `Anaconda.org "
"documentation <http://docs.anaconda.org/>`_."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:256
msgid ""
"Create a free Anaconda.org account and record your new Anaconda.org "
"username and password."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:259
msgid ""
"Run ``conda install anaconda-client`` and enter your Anaconda.org "
"username and password."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:262
msgid ""
"Log into your Anaconda.org account from your Terminal or an Anaconda "
"Prompt with the command ``anaconda login``."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:265
msgid "Now you can upload the new local packages to Anaconda.org."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:281
msgid ""
"NOTE: Change your path and filename to the exact path and filename you "
"saved in :ref:`python-versions`. Your path and filename will vary "
"depending on your installation and operating system."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:286
msgid ""
"If you created packages for multiple versions of Python or used conda "
"convert to make packages for each supported architecture, you must use "
"the ``anaconda upload`` command to upload each one. It is considered best"
" practice to create packages for Python versions 2.7, 3.4 and 3.5 along "
"with all of the architectures."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:292
msgid ""
"TIP: If you want to always automatically upload a successful build to "
"Anaconda.org, run:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:299
msgid "You can log out of your Anaconda.org account with the command:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:309
msgid "Troubleshooting a sample issue"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:311
msgid "Conda build may produce the error message \"Build Package missing.\""
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:313
msgid "To explore this error:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:315
msgid ""
"Create a conda skeleton package for skyfield. The ``conda skeleton`` "
"command is:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:322
msgid "This command creates the skyfield conda build recipe."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:324
msgid ""
"Run ``conda-build skyfield`` and observe that it fails with the following"
" output:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:338
msgid ""
"In this example, the conda recipe requires ``sgp4`` for the skyfield "
"package. The skyfield recipe was created by ``conda skeleton``. This "
"error means that conda could not find the spg4 package and install it."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:343
msgid ""
"Since many PyPI packages depend on other PyPI packages to build or run, "
"the solution is sometimes as simple as using ``conda skeleton`` to create"
" a conda recipe for the missing package and then building it:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:353
msgid ""
"You may also try using the ``--recursive`` flag with ``conda skeleton``, "
"but this makes conda recipes for all required packages, even those that "
"are already available to conda install."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:361
msgid "Working Around MITM Proxies"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:363
msgid ""
"Some corporate environments use proxy services that use Man-In-The-Middle"
" (MITM) attacks to sniff encrypted traffic. These services can interfere "
"with SSL connections such as those used by conda and pip to download "
"packages from repositories such as PyPI."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:368
msgid ""
"If you encounter this interference, you should set up the proxy service's"
" certificates so that the ``requests`` package used by conda can "
"recognize and use the certificates."
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:372
msgid ""
"For cases where this is not possible, conda-build versions 3.0.31 and "
"higher have an option that disables SSL certificate verification and "
"allows this traffic to continue:"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:376
msgid ":doc:`../configuration/disable-ssl-verification`"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:382
msgid "More information"
msgstr ""

#: ../../source/user-guide/tutorials/build-pkgs-skeleton.rst:384
msgid ""
"For more options, see the full :doc:`conda skeleton command documentation"
" <../../commands>`."
msgstr ""

