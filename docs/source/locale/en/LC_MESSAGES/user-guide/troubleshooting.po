# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Anaconda, Inc.
# This file is distributed under the same license as the Conda package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Conda  \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-18 12:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/user-guide/troubleshooting.rst:3
msgid "Troubleshooting"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:10
msgid "SSL connection errors"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:13
#: ../../source/user-guide/troubleshooting.rst:98
#: ../../source/user-guide/troubleshooting.rst:150
#: ../../source/user-guide/troubleshooting.rst:193
#: ../../source/user-guide/troubleshooting.rst:214
#: ../../source/user-guide/troubleshooting.rst:246
#: ../../source/user-guide/troubleshooting.rst:263
#: ../../source/user-guide/troubleshooting.rst:284
#: ../../source/user-guide/troubleshooting.rst:319
#: ../../source/user-guide/troubleshooting.rst:352
#: ../../source/user-guide/troubleshooting.rst:401
#: ../../source/user-guide/troubleshooting.rst:434
#: ../../source/user-guide/troubleshooting.rst:486
#: ../../source/user-guide/troubleshooting.rst:525
#: ../../source/user-guide/troubleshooting.rst:586
#: ../../source/user-guide/troubleshooting.rst:716
#: ../../source/user-guide/troubleshooting.rst:735
#: ../../source/user-guide/troubleshooting.rst:753
msgid "Cause"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:15
msgid ""
"Installing packages may produce a \"connection failed\" error if you do "
"not have the certificates for a secure connection to the package "
"repository."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:19
#: ../../source/user-guide/troubleshooting.rst:106
#: ../../source/user-guide/troubleshooting.rst:139
#: ../../source/user-guide/troubleshooting.rst:158
#: ../../source/user-guide/troubleshooting.rst:198
#: ../../source/user-guide/troubleshooting.rst:225
#: ../../source/user-guide/troubleshooting.rst:257
#: ../../source/user-guide/troubleshooting.rst:278
#: ../../source/user-guide/troubleshooting.rst:295
#: ../../source/user-guide/troubleshooting.rst:324
#: ../../source/user-guide/troubleshooting.rst:359
#: ../../source/user-guide/troubleshooting.rst:407
#: ../../source/user-guide/troubleshooting.rst:450
#: ../../source/user-guide/troubleshooting.rst:498
#: ../../source/user-guide/troubleshooting.rst:546
#: ../../source/user-guide/troubleshooting.rst:594
#: ../../source/user-guide/troubleshooting.rst:726
#: ../../source/user-guide/troubleshooting.rst:741
#: ../../source/user-guide/troubleshooting.rst:758
msgid "Solution"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:21
msgid ""
"Pip can use the ``--trusted-host`` option to indicate that the URL of the"
" repository is trusted::"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:26
msgid "Conda has three similar options."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:28
msgid ""
"The option ``--insecure`` or ``-k`` ignores certificate validation errors"
" for all hosts."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:30
msgid "Running ``conda create --help`` shows::"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:37
msgid "The configuration option ``ssl_verify`` can be set to ``False``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:39
#: ../../source/user-guide/troubleshooting.rst:66
msgid "Running ``conda config --describe ssl_verify`` shows::"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:52
msgid ""
"Running ``conda config --set ssl_verify false`` modifies ``~/.condarc`` "
"and sets the ``-k`` flag for all future conda operations performed by "
"that user. Running ``conda config --help`` shows other configuration "
"scope options."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:56
#: ../../source/user-guide/troubleshooting.rst:84
msgid ""
"When using ``conda config``, the user's conda configuration file at "
"``~/.condarc`` is used by default. The flag ``--system`` will instead "
"write to the system configuration file for all users at "
"``<CONDA_BASE_ENV>/.condarc``. The flag ``--env`` will instead write to "
"the active conda environment's configuration file at "
"``<PATH_TO_ACTIVE_CONDA_ENV>/.condarc``. If ``--env`` is used and no "
"environment is active, the user configuration file is used."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:64
msgid ""
"The configuration option ``ssl_verify`` can be used to install new "
"certificates."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:79
msgid ""
"Your network administrator can give you a certificate bundle for your "
"network's firewall. Then ``ssl_verify`` can be set to the path of that "
"certificate authority (CA) bundle, and package installation operations "
"will complete without connection errors."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:95
msgid "Permission denied errors during installation"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:100
msgid ""
"The ``umask`` command  determines the mask settings that control how file"
" permissions are set for newly created files. If you have a very "
"restrictive ``umask``, such as ``077``, you get \"permission denied\" "
"errors."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:108
msgid ""
"Set a less restrictive ``umask`` before calling conda commands. Conda was"
" intended as a user space tool, but often users need to use it in a "
"global environment. One place this can go awry is with restrictive file "
"permissions.  Conda creates links when you install files that have to be "
"read by others on the system."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:114
msgid ""
"To give yourself full permissions for files and directories, but prevent "
"the group and other users from having access:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:117
msgid "Before installing, set the ``umask`` to ``007``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:119
msgid "Install conda."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:121
msgid "Return the ``umask`` to the original setting:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:130
msgid ""
"For more information on ``umask``, see "
"`http://en.wikipedia.org/wiki/Umask "
"<http://en.wikipedia.org/wiki/Umask>`_."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:136
msgid "Permission denied errors after using sudo conda command"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:141
msgid ""
"Once you run conda with sudo, you must use sudo forever. We recommend "
"that you NEVER run conda with sudo."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:147
msgid "Already installed error message"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:152
msgid ""
"If you are trying to fix conda problems without removing the current "
"installation and you try to reinstall Miniconda or Anaconda to fix it, "
"you get an error message that Miniconda or Anaconda is already installed,"
" and you cannot continue."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:160
msgid "Install using the --force option."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:163
msgid ""
"Download and install the appropriate Miniconda for your operating system "
"from the `Miniconda download page <https://conda.io/miniconda.html>`_ "
"using the force option ``--force`` or ``-f``:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:172
msgid ""
"NOTE: Substitute the appropriate filename and version for your operating "
"system."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:175
msgid ""
"NOTE: Be sure that you install to the same install location as your "
"existing install so it overwrites the core conda files and does not "
"install a duplicate in a new folder."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:183
msgid "Conda reports that a package is installed, but it appears not to be"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:185
msgid ""
"Sometimes conda claims that a package is already installed, but it does "
"not appear to be, for example, a Python package that gives ImportError."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:189
msgid ""
"There are several possible causes for this problem, each with its own "
"solution."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:195
msgid "You are not in the same conda environment as your package."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:200
msgid ""
"Make sure that you are in the same conda environment as your package. The"
" ``conda info`` command tells you what environment is currently active---"
"under ``default environment``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:204
msgid ""
"Verify that you are using the Python from the correct environment by "
"running:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:215
msgid ""
"For Python packages, you have set the PYTHONPATH or PYTHONHOME variable. "
"These environment variables cause Python to load files from locations "
"other than the standard ones. Conda works best when these environment "
"variables are not set, as their typical use cases are obviated by conda "
"environments and a common issue is that they cause Python to pick up the "
"wrong versions or broken versions of a library."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:227
msgid ""
"For Python packages, make sure you have not set the PYTHONPATH or "
"PYTHONHOME variables. The command ``conda info -a`` displays the values "
"of these environment variables."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:231
msgid ""
"To unset these environment variables temporarily for the current Terminal"
" session, run ``unset PYTHONPATH``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:234
msgid "To unset them permanently, check for lines in the files:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:236
msgid "If you use bash---``~/.bashrc``, ``~/.bash_profile``, ``~/.profile``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:239
msgid "If you use zsh---`~/.zshrc``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:241
msgid "If you use PowerShell on Windows, the file output by ``$PROFILE`` ."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:248
msgid ""
"You have site-specific directories or, for Python, you have so-called "
"site-specific files. These are typically located in ``~/.local`` on Linux"
" and macOS. For a full description of the locations of site-specific "
"packages, see `PEP 370 <http://legacy.python.org/dev/peps/pep-0370/>`_.  "
"As with PYTHONPATH, Python may try importing packages from this "
"directory, which can cause issues."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:259
msgid ""
"For Python packages, remove site-specific directories and site-specific "
"files."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:265
msgid "For C libraries, the following environment variables have been set:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:268
msgid "macOS---DYLD_LIBRARY_PATH."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:269
msgid "Linux---LD_LIBRARY_PATH."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:271
msgid ""
"These act similarly to ``PYTHONPATH`` for Python. If they are set, they "
"can cause libraries to be loaded from locations other than the conda "
"environment. Conda environments obviate most use cases for these "
"variables. The command ``conda info -a`` shows what these are set to."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:280
msgid "Unset DYLD_LIBRARY_PATH or LD_LIBRARY_PATH."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:286
msgid ""
"Occasionally, an installed package becomes corrupted. Conda works by "
"unpacking the packages in the ``pkgs`` directory and then hard-linking "
"them to the environment. Sometimes these get corrupted, breaking all "
"environments that use them, and also any additional environments, since "
"the same files are hard-linked each time."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:297
msgid ""
"Run the command ``conda install -f`` to unarchive the package again and "
"relink it. It also does an md5 verification on the package. Usually if "
"this is different, it is because your channels have changed and there is "
"a different package with the same name, version, and build number."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:303
msgid ""
"NOTE: This breaks the links to any other environments that already had "
"this package installed, so you have to reinstall it there, too. It also "
"means that running ``conda install -f`` a lot can use up a lot of disk "
"space if you have a lot of environments."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:308
msgid ""
"NOTE: The ``-f`` flag to ``conda install`` (``--force``) implies ``--no-"
"deps``, so ``conda install -f package`` does not reinstall any of the "
"dependencies of ``package``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:316
msgid "pkg_resources.DistributionNotFound: conda==3.6.1-6-gb31b0d4-dirty"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:321
msgid "The local version of conda needs updating."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:326
msgid ""
"Force reinstall conda. A useful way to work off the development version "
"of conda is to run ``python setup.py develop`` on a checkout of the "
"`conda git repository <https://github.com/conda/conda>`_. However, if you"
" are not regularly running ``git pull``, it is a good idea to un-develop,"
" as you will otherwise not get any regular updates to conda. The normal "
"way to do this is to run ``python setup.py develop -u``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:334
msgid ""
"However, this command does not replace the ``conda`` script itself. With "
"other packages, this is not an issue, as you can just reinstall them with"
" ``conda``, but conda cannot be used if conda is installed."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:339
msgid ""
"The fix is to use the ``./bin/conda`` executable in the conda git "
"repository to force reinstall conda, that is, run ``./bin/conda install "
"-f conda``.  You can then verify with ``conda info`` that you have the "
"latest version of conda, and not a git checkout---the version should not "
"include any hashes."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:349
msgid "macOS error \"ValueError unknown locale: UTF-8\""
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:354
msgid ""
"This is a bug in the macOS Terminal app that shows up only in certain "
"locales. Locales are country-language combinations."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:361
msgid "Open Terminal in ``/Applications/Utilities``"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:363
msgid "Clear the Set locale environment variables on startup checkbox."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:371
msgid ""
"This sets your LANG environment variable to be empty. This may cause "
"Terminal use to incorrect settings for your locale. The ``locale`` "
"command in Terminal tells you what settings are used."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:375
msgid ""
"To use the correct language, add a line to your bash profile, which is "
"typically ``~/.profile``:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:382
msgid ""
"NOTE: Replace ``your-lang`` with the correct locale specifier for your "
"language."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:385
msgid ""
"The command ``locale -a`` displays all the specifiers. For example, the "
"language code for US English is ``en_US.UTF-8``. The locale affects what "
"translations are used when they are available and also how dates, "
"currencies and decimals are formatted."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:394
msgid "AttributeError or missing getproxies"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:396
msgid ""
"When running a command such as ``conda update ipython``, you may get an "
"``AttributeError: 'module' object has no attribute 'getproxies'``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:403
msgid ""
"This can be caused by an old version of ``requests`` or by having the "
"``PYTHONPATH`` environment variable set."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:409
msgid "Update ``requests`` and be sure ``PYTHONPATH`` is not set:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:411
msgid ""
"Run ``conda info -a`` to show the ``requests`` version and various "
"environment variables such as ``PYTHONPATH``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:414
msgid "Update the ``requests`` version with ``pip install -U requests``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:417
msgid "Clear ``PYTHONPATH``:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:419
msgid "On Windows, clear it the environment variable settings."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:421
msgid ""
"On macOS and Linux, clear it by removing it from the bash profile and "
"restarting the shell."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:428
msgid "Shell commands open from the wrong location"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:430
msgid ""
"When you run a command within a conda environment, conda does not access "
"the correct package executable."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:436
msgid ""
"In both bash and zsh, when you enter a command, the shell searches the "
"paths in PATH one by one until it finds the command. The shell then "
"caches the location, which is called hashing in shell terminology. When "
"you run command again, the shell does not have to search the PATH again."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:442
msgid ""
"The problem is that before you installed the program, you ran a command "
"which loaded and hashed another version of that program in some other "
"location on the PATH, such as ``/usr/bin``. Then you installed the "
"program using ``conda install``, but the shell still had the old instance"
" hashed."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:452
msgid ""
"Reactivate the environment or run ``hash -r`` (in bash) or ``rehash`` (in"
" zsh)."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:455
msgid ""
"When you run ``source activate``, conda automatically runs ``hash -r`` in"
" bash and ``rehash`` in zsh to clear the hashed commands, so conda finds "
"things in the new path on the PATH. But there is no way to do this when "
"``conda install`` is run because the command must be run inside the shell"
" itself, meaning either you have to run the command yourself or use "
"source a file that contains the command."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:463
msgid ""
"This is a relatively rare problem, since this happens only in the "
"following circumstances:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:466
msgid ""
"You activate an environment or use the root environment, and then run a "
"command from somewhere else."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:469
msgid ""
"Then you conda install a program, and then try to run the program again "
"without running ``activate`` or ``deactivate``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:473
msgid ""
"The command ``type command_name`` always tells you exactly what is being "
"run. This is better than ``which command_name``, which ignores hashed "
"commands and searches the PATH directly. The hash is reset by ``source "
"activate``, or by ``hash -r`` in bash or ``rehash`` in zsh."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:483
msgid "Programs fail due to invoking conda Python instead of system Python"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:488
msgid ""
"After installing Anaconda or Miniconda, programs that run ``python`` "
"switch from invoking the system Python to invoking the Python in the root"
" conda environment. If these programs rely on the system Python to have "
"certain configurations or dependencies that are not in the root conda "
"environment Python, the programs may crash. For example, some users of "
"the Cinnamon desktop environment on Linux Mint have reported these "
"crashes."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:500
msgid ""
"Edit your ``.bash_profile`` and ``.bashrc`` files so that the conda "
"binary directory, such as ``~/miniconda3/bin``, is no longer added to the"
" PATH environment variable. You can still run ``conda`` ``activate`` and "
"``deactivate`` by using their full path names, such as "
"``~/miniconda3/bin/conda``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:506
msgid ""
"You may also create a folder with symbolic links to ``conda``, "
"``activate`` and ``deactivate``, and then edit your ``.bash_profile`` or "
"``.bashrc`` file to add this folder to your PATH. If you do this, running"
" ``python`` will invoke the system Python, but running ``conda`` "
"commands, ``source activate MyEnv``, ``source activate root``, or "
"``source deactivate`` will work normally."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:514
msgid ""
"After running ``source activate`` to activate any environment, including "
"after running ``source activate root``, running ``python`` will invoke "
"the Python in the active conda environment."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:522
msgid "UnsatisfiableSpecifications error"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:527
msgid ""
"Some conda package installation specifications are impossible to satisfy."
" For example, ``conda create -n tmp python=3 wxpython=3`` produces an "
"\"Unsatisfiable Specifications\" error because wxPython 3 depends on "
"Python 2.7, so the specification to install Python 3 conflicts with the "
"specification to install wxPython 3."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:533
msgid ""
"When an unsatisfiable request is made to conda, conda shows a message "
"such as this one::"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:541
msgid ""
"This indicates that the specification to install wxpython 3 depends on "
"installing Python 2.7, which conflicts with the specification to install "
"python 3."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:548
msgid ""
"Use \"conda info wxpython\" or \"conda info wxpython=3\" to show "
"information about this package and its dependencies::"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:572
msgid ""
"By examining the dependencies of each package, you should be able to "
"determine why the installation request produced a conflict and modify the"
" request so it can be satisfied without conflicts. In this example, you "
"could install wxPython with Python 2.7::"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:583
msgid "Package installation fails from a specific channel"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:588
msgid ""
"Sometimes it is necessary to install a specific version from a specific "
"channel because that version is not available from the default channel."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:596
msgid "The following example describes the problem in detail and its solution."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:599
msgid ""
"Suppose you have a specific need to install the Python ``cx_freeze`` "
"module with Python 3.4. A first step is to create a Python 3.4 "
"environment:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:607
msgid "Using this environment you should first attempt:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:613
msgid "However, when you do this you get the following error::"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:625
msgid ""
"The message indicates that ``cx_freeze`` cannot be found in the default "
"package channels. However, there may be a community-created version "
"available and you can search for it by running the following command:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:647
msgid ""
"In this example, there are 4 different places that you could try to get "
"the package. None of them are officially supported or endorsed by "
"Anaconda, but members of the conda community have provided many valuable "
"packages. If you want to go with public opinion, then `the web interface "
"<https://anaconda.org/search?q=cx_freeze>`_ provides more information:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:662
msgid ""
"Notice that the ``pyzo`` organization has by far the most downloads, so "
"you might choose to use their package. If so, you can add their "
"organization's channel by specifying it on the command line:"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:700
msgid ""
"Now you have a software environment sandbox created with Python 3.4 and "
"``cx_freeze``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:707
msgid "Conda automatically upgrades to unwanted version"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:709
msgid ""
"When making a python package for an app, you create an environment for "
"the app from a file ``req.txt`` that sets a certain version, such as "
"``python=2.7.9``. However, when you ``conda install`` your package, it "
"automatically upgrades to a later version, such as ``2.7.10``."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:718
msgid ""
"If you make a conda package for the app using conda build, you can set "
"dependencies with specific version numbers. In :doc:`this example <tasks"
"/build-packages/define-metadata>`, the requirements lines that say ``- "
"python`` could be ``- python ==2.7.9`` instead. It is important to have 1"
" space before the == operator and no space after."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:728
msgid "Exercise caution when coding version requirements."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:732
msgid "ValidationError: Invalid value for timestamp"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:737
msgid ""
"This happens when certain packages are installed with conda 4.3.28, and "
"then conda is downgraded to 4.3.27 or earlier."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:743
msgid "See https://github.com/conda/conda/issues/6096."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:748
msgid "Unicode error after installing Python 2"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:750
msgid ""
"Example: UnicodeDecodeError: 'ascii' codec can't decode byte 0xd3 in "
"position 1: ordinal not in range(128)"
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:755
msgid ""
"Python 2 is incapable of handling unicode properly, especially on "
"Windows. In this case, if any character in your PATH env. var contains "
"anything that is not ASCII then you see this exception."
msgstr ""

#: ../../source/user-guide/troubleshooting.rst:760
msgid "Remove all non-ASCII from PATH or switch to Python 3."
msgstr ""

