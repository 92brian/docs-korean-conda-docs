
.. _build_ref:

conda build
=======================

.. raw:: html

   <PRE>
   <!-- Manpage converted by man2html 3.0.1 -->
   <B>CONDA(1)</B>                         User Commands                        <B>CONDA(1)</B>
   
   
   
   NAME
          conda - conda build
   
   DESCRIPTION
          usage: conda-build [-h] [-V] [-n] [--output] [--python PYTHON_VER]
   
                 [--perl   PERL_VER]   [--numpy  NUMPY_VER]  [--R  R_VER]  [--lua
                 LUA_VER] [--check] [--no-anaconda-upload]  [--no-include-recipe]
                 [-s]    [-t]    [--no-test]    [-b]    [-p]    [--skip-existing]
                 [--keep-old-work]  [--dirty]  [-q]  [--debug]  [--token   TOKEN]
                 [--user  USER] [--no-force-upload] [--password PASSWORD] [--sign
                 SIGN]  [--sign-with  SIGN_WITH]  [--identity  IDENTITY]  [--con‐
                 fig-file  CONFIG_FILE] [--repository REPOSITORY] [--no-activate]
                 [--no-build-id] [--croot CROOT]  [--no-verify]  [--output-folder
                 OUTPUT_FOLDER]       [--no-prefix-length-fallback]       [--pre‐
                 fix-length-fallback]      [--prefix-length       _PREFIX_LENGTH]
                 [--no-locking]    [--no-remove-work-dir]    [--long-test-prefix]
                 [--no-long-test-prefix]   [-c   CHANNEL]   [--override-channels]
                 RECIPE_PATH [RECIPE_PATH ...]
   
          Tool  for  building conda packages. A conda package is a binary tarball
          containing system-level libraries, Python modules, executable programs,
          or other components. conda keeps track of dependencies between packages
          and platform specifics, making it simple to create working environments
          from different sets of packages.
   
      positional arguments:
          RECIPE_PATH
                 Path  to  recipe  directory. Pass 'purge' here to clean the work
                 and test intermediates.
   
      optional arguments:
          -h, --help
                 Show this help message and exit.
   
          -V, --version
                 Show the conda-build version number and exit.
   
          -n, --no-source
                 When templating can't be completed, do not obtain the source  to
                 try fill in related template variables.
   
          --output
                 Output the conda package filename which would have been created
   
          --python PYTHON_VER
                 Set the Python version used by conda build.
   
          --perl PERL_VER
                 Set the Perl version used by conda build.
   
          --numpy NUMPY_VER
                 Set the NumPy version used by conda build.
   
          --R R_VER
                 Set the R version used by conda build.
   
          --lua LUA_VER
                 Set the Lua version used by conda build.
   
          --check
                 Only check (validate) the recipe.
   
          --no-anaconda-upload
                 Do not ask to upload the package to anaconda.org.
   
          --no-include-recipe
                 Don't include the recipe inside the built package.
   
          -s, --source
                 Only obtain the source (but don't build).
   
          -t, --test
                 Test  package  (assumes  package  is already built).  RECIPE_DIR
                 argument can be either recipe directory, in  which  case  source
                 download  may be necessary to resolve packageversion, or path to
                 built package .tar.bz2 file, in which case no source  is  neces‐
                 sary.
   
          --no-test
                 Do not test the package.
   
          -b, --build-only
                 Only  run  the  build,  without  any post processing or testing.
                 Implies --no-test and --no-anaconda-upload.
   
          -p, --post
                 Run  the  post-build  logic.  Implies  --no-test  and   --noana‐
                 conda-upload.
   
          --skip-existing
                 Skip  recipes  for  which there already exists an existing build
                 (locally or in the channels).
   
          --keep-old-work
                 Do not remove anything from environment, even after  successful‐
                 build and test.
   
          --dirty
                 Do  not remove work directory or _build environment, to speed up
                 debugging. Does not apply patches or download source.
   
          -q, --quiet
                 do not display progress bar
   
          --debug
                 Show debug output from source checkouts and conda
   
          --token TOKEN
                 Token to pass through to anaconda upload
   
          --user USER
                 User/organization to upload packages to on anaconda.org or pypi
   
          --no-force-upload
                 Disable force upload to anaconda.org, preventing overwriting any
                 existing packages
   
          --no-activate
                 do not activate the build and test envs; just prepend to PATH
   
          --no-build-id
                 do  not generate unique build folder names. Use if having issues
                 with paths being too long.
   
          --croot CROOT
                 Build root folder. Equivalent  to  CONDA_BLD_PATH,  but  applies
                 only to this call of conda-build.
   
          --no-verify
                 do not run verification on recipes or packages when building
   
          --output-folder OUTPUT_FOLDER
                 folder  to  dump  output  package  to. Package are moved here if
                 build or test succeeds. Destination folder must exist  prior  to
                 using this.
   
          --no-prefix-length-fallback
                 Disable fallback to older 80 character prefix length if environ‐
                 ment creation fails due to insufficient prefix length in  depen‐
                 dency packages
   
          --prefix-length-fallback
                 Disable fallback to older 80 character prefix length if environ‐
                 ment creation fails due to insufficient prefix length in  depen‐
                 dency packages
   
          --prefix-length _PREFIX_LENGTH
                 length  of  build  prefix. For packages with binaries that embed
                 the path, this is critical to ensuring that your package can run
                 as  many places as possible.  Notethat this value can be altered
                 by the OS  below  conda-build  (e.g.  encrypted  filesystems  on
                 Linux),  and you should prefer to set --croot to a non-encrypted
                 location instead, so that you maintain a known prefix length.
   
          --no-locking
                 Disable locking, to  avoid  unresolved  race  condition  issues.
                 Unsafe  to  run  multiplebuilds  at once on one system with this
                 set.
   
          --no-remove-work-dir
                 Disable removal of the work dir before testing. Be careful using
                 this  option,  as  you  package may depend on files that are not
                 included in the package, and may passtests, but ultimately  fail
                 on installed systems.
   
          --long-test-prefix
                 Use a long prefix for the test prefix, as well as the build pre‐
                 fix. Affects only Linux  and  Mac.  Prefix  length  matches  the
                 --prefix-length flag. This is off by default in conda-build 2.x,
                 but will be enabled by default in conda-build 3.0.
   
          --no-long-test-prefix
                 Do not use a long prefix for the test prefix,  as  well  as  the
                 build prefix. Affects only Linux and Mac.  Prefix length matches
                 the --prefix-length flag. This is currently the  default  behav‐
                 ior,  and  does  not  need  to  be  set.  This  will  change  in
                 conda-build 3.0 (longtest-prefix enabled by default)
   
          -c CHANNEL, --channel CHANNEL
                 Additional channel  to  search  for  packages.  These  are  URLs
                 searched  in  the  order  they  are given (including file:// for
                 local directories). Then, the defaults or channels from .condarc
                 are  searched (unless --override-channels is given). You can use
                 'defaults' to get the default packages for conda,  and  'system'
                 to  get  the  system  packages,  which  also takes .condarc into
                 account. You can also  use  any  name  and  the  .condarc  chan‐
                 nel_alias  value will be prepended. The default channel_alias is
                 http://conda.anaconda.org/.
   
          --override-channels
                 Do not search default or .condarc channels. Requires --channel.
   
      PyPI upload parameters (twine):
          --password PASSWORD
                 password to use when uploading packages to pypi
   
          --sign SIGN
                 sign files when uploading to pypi
   
          --sign-with SIGN_WITH
                 program to use to sign files when uploading to pypi
   
          --identity IDENTITY
                 GPG identity to use to sign files when uploading to pypi
   
          --config-file CONFIG_FILE
                 path to .pypirc file to use when uploading to pypi
   
          --repository REPOSITORY, -r REPOSITORY
                 PyPI repository to upload to
   
   
   
   Continuum Analytics                June 2017                          <B>CONDA(1)</B>
   </PRE>
