.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.4.
.TH CONDA "1" "1ì›” 2019" "Anaconda, Inc." "User Commands"
.SH NAME
conda \- conda search
.SH DESCRIPTION
usage: conda search [\-h] [\-n ENVIRONMENT | \fB\-p\fR PATH] [\-i] [\-C]
.TP
[\-\-platform PLATFORM] [\-\-reverse\-dependency] [\-\-offline]
[\-c CHANNEL] [\-\-override\-channels] [\-\-json] [\-\-debug]
[\-\-verbose] [\-\-use\-local] [\-k] [\-\-envs]
.PP
Search for packages and display associated information.
.IP
The input is a MatchSpec, a query language for conda packages.
See examples below.
.SH OPTIONS
.SS "optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
Show this help message and exit.
.TP
\fB\-n\fR ENVIRONMENT, \fB\-\-name\fR ENVIRONMENT
Name of environment.
.TP
\fB\-p\fR PATH, \fB\-\-prefix\fR PATH
Full path to environment prefix.
.TP
\fB\-i\fR, \fB\-\-info\fR
Provide detailed information about each package.
Similar to output of 'conda info package\-name'.
.TP
\fB\-C\fR, \fB\-\-use\-index\-cache\fR
Use cache of channel index files, even if it has
expired.
.TP
\fB\-\-platform\fR PLATFORM
Search the given platform. Should be formatted like
\&'osx\-64', 'linux\-32', 'win\-64', and so on. The default
is to search the current platform.
.TP
\fB\-\-reverse\-dependency\fR
Perform a reverse dependency search. When using this
flag, the \fB\-\-full\-name\fR flag is recommended. Use 'conda
info package' to see the dependencies of a package.
.TP
\fB\-\-offline\fR
Offline mode, don't connect to the Internet.
.TP
\fB\-c\fR CHANNEL, \fB\-\-channel\fR CHANNEL
Additional channel to search for packages. These are
URLs searched in the order they are given (including
file:// for local directories). Then, the defaults or
channels from .condarc are searched (unless
\fB\-\-override\-channels\fR is given). You can use 'defaults'
to get the default packages for conda, and 'system' to
get the system packages, which also takes .condarc
into account. You can also use any name and the
\&.condarc channel_alias value will be prepended. The
default channel_alias is http://conda.anaconda.org/.
.TP
\fB\-\-override\-channels\fR
Do not search default or .condarc channels. Requires
\fB\-\-channel\fR.
.TP
\fB\-\-json\fR
Report all output as json. Suitable for using conda
programmatically.
.TP
\fB\-\-debug\fR
Show debug output.
.TP
\fB\-\-verbose\fR, \fB\-v\fR
Use once for info, twice for debug, three times for
trace.
.TP
\fB\-\-use\-local\fR
Use locally built packages.
.TP
\fB\-k\fR, \fB\-\-insecure\fR
Allow conda to perform "insecure" SSL connections and
transfers. Equivalent to setting 'ssl_verify' to
\&'false'.
.TP
\fB\-\-envs\fR
Search all of the current user's environments. If run
as Administrator (on Windows) or UID 0 (on unix),
search all known environments on the system.
.SH EXAMPLES
Search for a specific package named 'scikit\-learn':
.IP
conda search scikit\-learn
.PP
Search for packages containing 'scikit' in the package name:
.IP
conda search *scikit*
.PP
Note that your shell may expand '*' before handing the command over to conda.
Therefore it is sometimes necessary to use single or double quotes around the query.
.IP
conda search '*scikit'
conda search "*scikit*"
.PP
Search for packages for 64\-bit Linux (by default, packages for your current
platform are shown):
.IP
conda search numpy[subdir=linux\-64]
.PP
Search for a specific version of a package:
.IP
conda search 'numpy>=1.12'
.PP
Search for a package on a specific channel
.IP
conda search conda\-forge::numpy
conda search 'numpy[channel=conda\-forge, subdir=osx\-64]'
